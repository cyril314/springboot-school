<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit.dao.ReplyArticleDao">
  <resultMap id="BaseResultMap" type="com.fit.entity.ReplyArticle">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="reply_id" jdbcType="BIGINT" property="replyId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <sql id="Base_Column_List">
    id, reply_id, title, content, pic_url, url
  </sql>
  <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply_article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from reply_article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="save" parameterType="com.fit.entity.ReplyArticle">
    insert into reply_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="replyId != null">
        reply_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="url != null">
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="replyId != null">
        #{replyId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.fit.entity.ReplyArticle">
    update reply_article
    <set>
      <if test="replyId != null">
        reply_id = #{replyId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="Base_Where_List">
    <where>
      <if test="id != null and id != ''">
         and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="replyId != null and replyId != ''">
         and reply_id = #{replyId,jdbcType=BIGINT}
      </if>
      <if test="title != null and title != ''">
         and title = #{title,jdbcType=VARCHAR}
      </if>
      <if test="content != null and content != ''">
         and content = #{content,jdbcType=VARCHAR}
      </if>
      <if test="picUrl != null and picUrl != ''">
         and pic_url = #{picUrl,jdbcType=VARCHAR}
      </if>
      <if test="url != null and url != ''">
         and url = #{url,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <select id="findList" parameterType="com.fit.entity.ReplyArticle" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from reply_article
    <include refid="Base_Where_List" />
    order by id desc 
    <if test="pageNumber != null and pageSize != null">
     limit ${pageNumber}, ${pageSize}
	</if>
  </select>
  <select id="findCount" resultType="java.lang.Integer">
    select count(1) from reply_article
    <include refid="Base_Where_List" />
  </select>
  <select id="get" parameterType="java.util.Map" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from reply_article
     <include refid="Base_Where_List" />
  </select>
  <delete id="batchDelete">
    delete from reply_article
     where id in (
     <foreach collection="array" item="id" separator=",">
     #{id}
     </foreach>
    )
  </delete>
  <update id="deleteTable">
    truncate table reply_article
  </update>
  <select id="selectList" parameterType="java.lang.String" resultMap="BaseResultMap">
    ${value}
  </select>
</mapper>